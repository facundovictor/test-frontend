{"version":3,"sources":["_menu.coffee","app.js","_radial.coffee","index.coffee"],"names":["registerToggleMenu","menu_btn","toggle_menu","evt","menu","d3","select","classed","on","languages_data","loadRadials","loadSingleRadial","reloadRadials","reloadSingleRadial","renderRadial","name","percent","radial","container","img","img_size_factor","new_flag_left","new_flag_top","new_image_dimension","size","diameter","clientWidth","render","getSize","width","style","display","clientHeight","top","left","elem","index","div","children","radialProgress","value","i","len","ref","results","selectAll","length","push","innerHTML","radials","window","onload","onresize"],"mappings":"AAKA,GAAAA,mBAAAA,oBAAqB,WAGjB,GAAAC,GAAAC,CCMF,ODNEA,GAAc,SAACC,GACX,GAAAC,EACA,OADAA,GAAOC,GAAGC,OAAO,SACdF,EAAKG,QAAQ,UACZH,EAAKG,QAAQ,UAAS,GAEtBH,EAAKG,QAAQ,UAAS,IAG9BN,EAAWI,GAAGC,OAAO,sBAGrBL,EAASO,GAAG,QAASN,GEfzB,IAAAO,gBAAAC,YAAAC,iBAAAC,cAAAC,mBAAAC,YAAAL,kBACKM,KAAM,SAAUC,QAAS,MACzBD,KAAM,QAASC,QAAS,OACxBD,KAAM,UAAWC,QAAS,KAC1BD,KAAM,QAASC,QAAS,KAQ7BF,aAAe,SAACG,EAAQC,EAAWC,GAG/B,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,CD0BF,OC1BEA,GAAOP,EAAOQ,SAASP,EAAUQ,YAAc,IAAIC,SAASC,UAG5DR,EAAkB,GAGlBG,EAAsBC,EAAKK,MAAQ,EAAIT,EACvCD,EAAIW,MAAMD,MAAQ,GAAGN,EAAoB,KAGzCJ,EAAIW,MAAMC,QAAU,QAGpBV,EAAgBG,EAAKK,MAAQ,EAAKN,EAAsB,EAAK,EAC7DD,EAAeE,EAAKK,MAAQ,EAAKV,EAAIa,aAAe,EAAK,EACzDb,EAAIW,MAAMG,IAAM,GAAGX,EAAa,KAChCH,EAAIW,MAAMI,KAAO,GAAGb,EAAc,MAItCV,iBAAmB,SAACwB,EAAMC,GACtB,GAAAC,GAAAlB,EAAAF,CDcF,OCdEE,GAAMgB,EAAKG,SAAS,GACpBD,EAAMF,EAAKG,SAAS,GACpBrB,EAASsB,eAAeF,GAAKG,MAAM/B,eAAe2B,GAAOpB,SACzDF,aAAaG,EAAQoB,EAAKlB,GAC1BF,GAIJP,YAAc,WACV,GAAAyB,GAAAM,EAAAL,EAAAM,EAAAC,EAAAC,CDYF,KCZED,EAAAtC,GAAAwC,UAAA,gCAAA,GAAAD,KAAAR,EAAAK,EAAA,EAAAC,EAAAC,EAAAG,OAAAJ,EAAAD,EAAAL,IAAAK,EDaAN,EAAOQ,EAAIP,GACXQ,EAAQG,KCdRpC,iBAAiBwB,EAAMC,GDgBzB,OAAOQ,ICZT/B,mBAAqB,SAACI,EAAQkB,EAAMC,GAChC,GAAAC,GAAAlB,CDmBF,OCnBEA,GAAMgB,EAAKG,SAAS,GACpBD,EAAMF,EAAKG,SAAS,GACpBD,EAAIW,UAAY,GAChBlC,aAAaG,EAAQoB,EAAKlB,IAI9BP,cAAgB,SAACqC,GACb,GAAAd,GAAAM,EAAAL,EAAAM,EAAAC,EAAAC,CDkBF,KClBED,EAAAtC,GAAAwC,UAAA,gCAAA,GAAAD,KAAAR,EAAAK,EAAA,EAAAC,EAAAC,EAAAG,OAAAJ,EAAAD,EAAAL,IAAAK,EDmBAN,EAAOQ,EAAIP,GACXQ,EAAQG,KCpBRlC,mBAAmBoC,EAAQb,GAAQD,EAAMC,GDsB3C,OAAOQ,GEhFT,IAAAK,QAAAA,YAEAC,OAAOC,OAAS,SAAChD,GFuFf,MEpFEH,sBAGAiD,QAAUvC,eAEdwC,OAAOE,SAAW,SAACjD,GFmFjB,MEjFES,eAAcqC","file":"app.js","sourcesContent":["# @author facundovictor\n##############################################\n\n# registerToggleMenu:\n#   It registers the handler of the menu-btn.\nregisterToggleMenu = ->\n\n    # Toggle menu visibility\n    toggle_menu = (evt) ->\n        menu = d3.select '.menu'\n        if menu.classed 'hidden'\n            menu.classed('hidden',false)\n        else\n            menu.classed('hidden',true)\n\n    # Get the menu button\n    menu_btn = d3.select '.content .menu-btn'\n\n    # Attaches the function to the 'click' event\n    menu_btn.on 'click', toggle_menu\n\n\n","var registerToggleMenu;\n\nregisterToggleMenu = function() {\n  var menu_btn, toggle_menu;\n  toggle_menu = function(evt) {\n    var menu;\n    menu = d3.select('.menu');\n    if (menu.classed('hidden')) {\n      return menu.classed('hidden', false);\n    } else {\n      return menu.classed('hidden', true);\n    }\n  };\n  menu_btn = d3.select('.content .menu-btn');\n  return menu_btn.on('click', toggle_menu);\n};\n\nvar languages_data, loadRadials, loadSingleRadial, reloadRadials, reloadSingleRadial, renderRadial;\n\nlanguages_data = [\n  {\n    name: 'brazil',\n    percent: 100\n  }, {\n    name: 'italy',\n    percent: 87.5\n  }, {\n    name: 'england',\n    percent: 75\n  }, {\n    name: 'spain',\n    percent: 75\n  }\n];\n\nrenderRadial = function(radial, container, img) {\n  var img_size_factor, new_flag_left, new_flag_top, new_image_dimension, size;\n  size = radial.diameter(container.clientWidth + 28).render().getSize();\n  img_size_factor = 0.9;\n  new_image_dimension = size.width / 2 * img_size_factor;\n  img.style.width = '' + new_image_dimension + 'px';\n  img.style.display = 'block';\n  new_flag_left = size.width / 2 - (new_image_dimension / 2) + 1;\n  new_flag_top = size.width / 2 - (img.clientHeight / 2) + 1;\n  img.style.top = '' + new_flag_top + 'px';\n  return img.style.left = '' + new_flag_left + 'px';\n};\n\nloadSingleRadial = function(elem, index) {\n  var div, img, radial;\n  img = elem.children[0];\n  div = elem.children[1];\n  radial = radialProgress(div).value(languages_data[index].percent);\n  renderRadial(radial, div, img);\n  return radial;\n};\n\nloadRadials = function() {\n  var elem, i, index, len, ref, results;\n  ref = (d3.selectAll('.languages-container .radial'))[0];\n  results = [];\n  for (index = i = 0, len = ref.length; i < len; index = ++i) {\n    elem = ref[index];\n    results.push(loadSingleRadial(elem, index));\n  }\n  return results;\n};\n\nreloadSingleRadial = function(radial, elem, index) {\n  var div, img;\n  img = elem.children[0];\n  div = elem.children[1];\n  div.innerHTML = '';\n  return renderRadial(radial, div, img);\n};\n\nreloadRadials = function(radials) {\n  var elem, i, index, len, ref, results;\n  ref = (d3.selectAll('.languages-container .radial'))[0];\n  results = [];\n  for (index = i = 0, len = ref.length; i < len; index = ++i) {\n    elem = ref[index];\n    results.push(reloadSingleRadial(radials[index], elem, index));\n  }\n  return results;\n};\n\nvar radials;\n\nradials = [];\n\nwindow.onload = function(evt) {\n  registerToggleMenu();\n  return radials = loadRadials();\n};\n\nwindow.onresize = function(evt) {\n  return reloadRadials(radials);\n};\n","# @author facundovictor\n################################################\n\n# Languages to be loaded\nlanguages_data = [\n    {name: 'brazil', percent: 100}\n    {name: 'italy', percent: 87.5}\n    {name: 'england', percent: 75}\n    {name: 'spain', percent: 75}\n]\n\n\n# renderRadial\n#   Given a radial element, its container and a inner image,\n#   It renders/reloads the radial inside the container with\n#   the given image.\nrenderRadial = (radial, container, img) ->\n\n    # Render the radial inside the container and gets its size.\n    size = radial.diameter(container.clientWidth + 28).render().getSize()\n\n    # Image size factor\n    img_size_factor = 0.9\n\n    # New iamge dimension.\n    new_image_dimension = size.width / 2 * img_size_factor\n    img.style.width = ''+new_image_dimension+'px'\n\n    # set the image visible\n    img.style.display = 'block'\n\n    # New image position.\n    new_flag_left = size.width / 2 - (new_image_dimension / 2) + 1\n    new_flag_top = size.width / 2 - (img.clientHeight / 2) + 1\n    img.style.top = ''+new_flag_top+'px'\n    img.style.left = ''+new_flag_left+'px'\n\n\n# Loads a single radial\nloadSingleRadial = (elem, index) ->\n    img = elem.children[0]\n    div = elem.children[1]\n    radial = radialProgress(div).value languages_data[index].percent\n    renderRadial radial, div, img\n    radial\n\n\n# Loads all radials\nloadRadials = ->\n    loadSingleRadial elem, index for elem, index in (d3.selectAll '.languages-container .radial')[0]\n\n\n# Reloads a single radial\nreloadSingleRadial = (radial, elem, index) ->\n    img = elem.children[0]\n    div = elem.children[1]\n    div.innerHTML = ''\n    renderRadial radial, div, img\n\n\n# Reloads all radials\nreloadRadials = (radials) ->\n    reloadSingleRadial radials[index], elem, index for elem, index in (d3.selectAll '.languages-container .radial')[0]\n    \n","# @author facundovictor\n##############################################\n\n# Here is stored the radial elements for redraw purposes\nradials = []\n\nwindow.onload = (evt) ->\n    # Configure the Hamburguer button to toggle the menu\n    # visibilty on click\n    registerToggleMenu()\n\n    # Load all radials and keeps it for redraw them on resize\n    radials = loadRadials()\n\nwindow.onresize = (evt) ->\n    # Reloads all stored radials\n    reloadRadials radials\n\n"],"sourceRoot":"/source/"}